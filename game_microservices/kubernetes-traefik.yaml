apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
data:
  traefik.yml: |
    # traefik.yml
    global:
      checkNewVersion: true
      sendAnonymousUsage: false
    entryPoints:
      web:
        address: ":80"
    api:
      insecure: true
      dashboard: true
    providers:
      file:
        filename: /etc/traefik/dynamic.yml
        watch: true
    log:
      level: ERROR
  dynamic.yml: |
    http:
      middlewares:
        cors:
          headers:
            accessControlAllowOriginList: ["*"]
            accessControlAllowMethods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
            accessControlAllowHeaders: ["Content-Type", "Authorization"]
            accessControlMaxAge: 100
      routers:
        login:
          entryPoints:
            - web
          rule: "Path(`/login`)"
          service: login-service
          middlewares:
            - cors
        game:
          entryPoints:
            - web
          rule: "PathPrefix(`/game`)"
          service: game-service
          middlewares:
            - cors
        scoreboard:
          entryPoints:
            - web
          rule: "PathPrefix(`/scoreboard`)"
          service: scoreboard-service
          middlewares:
            - cors
        micro:
          entryPoints:
            - web
          rule: "Path(`/`)"
          service: micro-vue-front-service
          middlewares:
            - cors
        register:
          entryPoints:
            - web
          rule: "Path(`/register`)"
          service: login-service
          middlewares:
            - cors
      services:
        login-service:
          loadBalancer:
            servers:
              - url: "http://micro-go-login.default.svc.cluster.local:8083"
        game-service:
          loadBalancer:
            servers:
              - url: "http://micro-go-game.default.svc.cluster.local:8084"
        scoreboard-service:
          loadBalancer:
            servers:
              - url: "http://micro-go-score.default.svc.cluster.local:8085"
        micro-vue-front-service:
          loadBalancer:
            servers:
              - url: "http://micro-vue-front-service.default.svc.cluster.local:80"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      containers:
        - name: traefik
          image: traefik:v2.9.10
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/traefik
      volumes:
        - name: config
          configMap:
            name: traefik-config
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
spec:
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
